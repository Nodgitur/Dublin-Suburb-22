# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Alarm_pb2 as Alarm__pb2


class AlarmStub(object):
    """
    NOTE TO SELF - Create a server which take in a false or true statement to see if the door is locked. Also, the Speaker
    should use the date value to print the time in which the alarm was triggered.

    python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. Alarm.proto

    Alarm service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DoorLock = channel.unary_unary(
                '/Alarm.Alarm/DoorLock',
                request_serializer=Alarm__pb2.UnwantedVisitor.SerializeToString,
                response_deserializer=Alarm__pb2.Speaker.FromString,
                )


class AlarmServicer(object):
    """
    NOTE TO SELF - Create a server which take in a false or true statement to see if the door is locked. Also, the Speaker
    should use the date value to print the time in which the alarm was triggered.

    python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. Alarm.proto

    Alarm service
    """

    def DoorLock(self, request, context):
        """Basic RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlarmServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DoorLock': grpc.unary_unary_rpc_method_handler(
                    servicer.DoorLock,
                    request_deserializer=Alarm__pb2.UnwantedVisitor.FromString,
                    response_serializer=Alarm__pb2.Speaker.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Alarm.Alarm', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Alarm(object):
    """
    NOTE TO SELF - Create a server which take in a false or true statement to see if the door is locked. Also, the Speaker
    should use the date value to print the time in which the alarm was triggered.

    python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. Alarm.proto

    Alarm service
    """

    @staticmethod
    def DoorLock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Alarm.Alarm/DoorLock',
            Alarm__pb2.UnwantedVisitor.SerializeToString,
            Alarm__pb2.Speaker.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
