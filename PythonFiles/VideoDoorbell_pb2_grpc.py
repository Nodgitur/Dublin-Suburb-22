# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import VideoDoorbell_pb2 as VideoDoorbell__pb2


class VideoDoorbellServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.homeVideo = channel.stream_stream(
                '/VideoDoorbell.VideoDoorbellService/homeVideo',
                request_serializer=VideoDoorbell__pb2.Video.SerializeToString,
                response_deserializer=VideoDoorbell__pb2.BellRequest.FromString,
                )
        self.doorStatus = channel.stream_unary(
                '/VideoDoorbell.VideoDoorbellService/doorStatus',
                request_serializer=VideoDoorbell__pb2.DoorLockStatus.SerializeToString,
                response_deserializer=VideoDoorbell__pb2.DoorLockTamper.FromString,
                )


class VideoDoorbellServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def homeVideo(self, request_iterator, context):
        """Bidirectional Streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doorStatus(self, request_iterator, context):
        """Client-Side Streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VideoDoorbellServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'homeVideo': grpc.stream_stream_rpc_method_handler(
                    servicer.homeVideo,
                    request_deserializer=VideoDoorbell__pb2.Video.FromString,
                    response_serializer=VideoDoorbell__pb2.BellRequest.SerializeToString,
            ),
            'doorStatus': grpc.stream_unary_rpc_method_handler(
                    servicer.doorStatus,
                    request_deserializer=VideoDoorbell__pb2.DoorLockStatus.FromString,
                    response_serializer=VideoDoorbell__pb2.DoorLockTamper.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'VideoDoorbell.VideoDoorbellService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VideoDoorbellService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def homeVideo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/VideoDoorbell.VideoDoorbellService/homeVideo',
            VideoDoorbell__pb2.Video.SerializeToString,
            VideoDoorbell__pb2.BellRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def doorStatus(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/VideoDoorbell.VideoDoorbellService/doorStatus',
            VideoDoorbell__pb2.DoorLockStatus.SerializeToString,
            VideoDoorbell__pb2.DoorLockTamper.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
